<h1 class = 'route-settings-title'>
  {{t 'routes.settings.title'}}
</h1>{{! title }}



<div class='route-settings-settingsGroup _baking'>

  <h2 class='route-settings-settingsGroup-title'>
    System
  </h2>

  {{#each (array
    'maxTempBeforeTimer'
    'maxTempBeforeBaking'
    'maxTempAfterBaking'
    'maxTempDurationMins'
  ) as |fieldName|}}
    {{settings-field-input-button
      class     = "route-settings-field"
      fieldName = fieldName
      type      = 'number'

      userInput    = (get this fieldName)
      defaultValue = (get settings fieldName)

      label       = (t (concat 'routes.settings.fields.' fieldName '.label'))
      description = (t (concat 'routes.settings.fields.' fieldName '.description'))

      requestIsPending  = settings.globalBakingConfig.isPending
      requestIsRejected = (and
        (eq lastUpdatedGBCAttr fieldName)
        settings.globalBakingConfigProxy.isRejected
      )

      errorLabel = (t
        'routes.settings.error'
        field='globalBakingConfig'
        error=(error settings.globalBakingConfigProxy.reason)
      )

      submitAction = (action 'setGlobalBakingConfig' fieldName)
    }}
  {{/each}}{{! fieldName}}
</div>{{! settingsGroup _baking }}

<div class='route-settings-settingsGroup _system'>

  <h2 class='route-settings-settingsGroup-title'>
    System
  </h2>

  {{#settings-field-select
    class = "route-settings-field"

    fieldName   = 'locale'
    label       = (t 'routes.settings.fields.locale.label')
    description = (t 'routes.settings.fields.locale.description')

    requestIsPending  = settings.miscConfig.isPending
    requestIsRejected = (and
      (eq lastUpdatedMiscAttr 'locale')
      settings.miscConfig.isRejected
    )

    selected = intl.locale
    options  = intl.locales

    errorLabel = (t
      'routes.settings.error'
      field='locale'
      error=(error settings.miscConfigProxy.reason)
    )

    updateAction = (action 'setMiscConfig' 'locale')
    as |locale|
  }}
    {{t (concat 'domain.locale.' locale)}}
  {{/settings-field-select}}{{! locale }}




  {{#settings-field-select
    class = "route-settings-field"

    fieldName   = 'timezone'
    label       = (t 'routes.settings.fields.timezone.label')

    requestIsPending  = settings.miscConfig.isPending
    requestIsRejected = (and
      (eq lastUpdatedMiscAttr 'timezone')
      settings.miscConfig.isRejected
    )

    selected = moment.timeZone
    options  = timezones

    errorLabel = (t
      'routes.settings.error'
      field='timezone'
      error=(error settings.miscConfigProxy.reason)
    )

    updateAction = (action 'setMiscConfig' 'timezone')
    as |timezone|
  }}
    {{timezone}}
  {{/settings-field-select}}{{! timezone }}



  {{#settings-field
    class       = 'route-settings-field'
    fieldName   = 'password'
    label       = (t 'domain.login.password')

    requestIsPending  = settings.passwordProxy.isPending
    requestIsRejected = settings.passwordProxy.isRejected

    errorLabel = (t
      'routes.settings.error'
      field='password'
      error=(error settings.passwordProxy.reason)
    )
  }}
    <label class='route-settings-setting-label'>
      {{t 'domain.login.old-password'}}
    </label>

    {{one-way-input
      class  = 'route-settings-field-password-old'
      type   = 'password'
      value  = oldPassword
      update = (action (mut oldPassword))
    }}

    <label class='route-settings-setting-label'>
      {{t 'domain.login.new-password'}}
    </label>

    {{one-way-input
      class  = 'route-settings-field-password-new'
      type   = 'password'
      value  = newPassword
      update = (action (mut newPassword))
    }}

    <button
      class  = 'route-settings-field-password-submit'
      disabled = {{not (and oldPassword.length newPassword.length)}}
      {{action 'setPassword'}}
    >
      {{t 'domain.forms.save'}}
    </button>
  {{/settings-field}}{{! password }}



</div>{{! settingsGroup _system }}
