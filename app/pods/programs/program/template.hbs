{{#liquid-bind currentProgram class = '-horizontal' as |currentProgram|}}

  <div class = 'route-programsProgram'>



    <h1 class = 'route-programsProgram-title'>
      {{currentProgram.name}}
    </h1>{{! title }}



    <div class = 'route-programsProgram-group _stages'>

      <h2>
        {{t 'routes.programs-program.stages'}}
      </h2>



      <div class = 'route-programsProgram-stagesHeader'>
        <div class = 'route-programsProgram-stage-item _handle'></div>
        <div class = 'route-programsProgram-stage-item _index'>#</div>

        <div class = 'route-programsProgram-stage-item _stageName'>
          {{t 'routes.programs-program.fields.name.label'}}
        </div>{{! stage-item _stageName }}

        <div class = 'route-programsProgram-stage-item _temp'>
          {{t 'routes.programs-program.fields.temp.label'}}
        </div>{{! stage-item _temp }}

        <div class = 'route-programsProgram-stage-item _motor'>
          {{t 'routes.programs-program.fields.motor.label'}}
        </div>{{! stage-item _motor }}

        <div class = 'route-programsProgram-stage-item _duration'>
          {{t 'routes.programs-program.fields.duration.label'}}
        </div>{{! stage-item _duration }}

        <div class = 'route-programsProgram-stage-item _beep'>
          {{t 'routes.programs-program.fields.beeps.label'}}
        </div>{{! stage-item _beep }}

        <div class = 'route-programsProgram-stage-item _remove'></div>
      </div>{{! stagesHeader }}



      {{#drag-sort-list
        class         = 'route-programsProgram-stages'
        childClass    = 'route-programsProgram-stage'
        handle        = '.route-programsProgram-stage-item._handle'
        items         = stageWrappers
        dragEndAction = (action 'positionStage')
        as |stageWrapper i|
      }}
        <div class = 'route-programsProgram-stage-main'>
          <div class = 'route-programsProgram-stage-item _handle' draggable='true'>
            <span class = 'route-programsProgram-stage-item-handle-handle'>
              ùçñ
            </span>{{! stage-item-handle-handle }}
          </div>{{! stage-item _handle }}

          <div class = 'route-programsProgram-stage-item _index'>
            {{inc i}}
          </div>{{! stage-item _index }}

          <div class = 'route-programsProgram-stage-item _stageName'>
            {{input
              class    = 'route-programsProgram-stage-field-input'
              disabled = currentProgram.isSaving
              type     = 'text'
              value    = stageWrapper.stage.stageName
            }}
          </div>{{! stage-item _stageName }}

          <div class = 'route-programsProgram-stage-item _temp'>
            {{input
              class    = 'route-programsProgram-stage-field-input'
              disabled = currentProgram.isSaving
              type     = 'number'
              value    = stageWrapper.stage.temp
            }}
          </div>{{! stage-item _temp }}

          <div class = 'route-programsProgram-stage-item _motor'>
            {{one-way-select currentIntervalOption
              class   = 'route-programsProgram-stage-field-input'
              options = (array 'on' 'off' 'onoff')
              value   = stageWrapper.stage.motor
              update  = (action (mut stageWrapper.stage.motor))
            }}
          </div>{{! stage-item _motor }}

          <div class = 'route-programsProgram-stage-item _duration'>
            {{input
              class    = 'route-programsProgram-stage-field-input'
              disabled = currentProgram.isSaving
              type     = 'number'
              value    = stageWrapper.stage.durationMins
            }}
          </div>{{! stage-item _duration }}

          <div class = 'route-programsProgram-stage-item _beep'>
            <a
              class = 'route-programsProgram-stage-field-input'
              href
              {{action (toggle 'beepsAreExpanded' stageWrapper)}}
            >
              {{stageWrapper.stage.beeps.length}}
            </a>
          </div>{{! stage-item _beep }}

          <div class = 'route-programsProgram-stage-item _remove'>
            <a
              class = 'route-programsProgram-stage-field-input'
              href
              {{action 'removeStage' stageWrapper.stage}}
            >
              {{t 'routes.programs-program.remove'}}
            </a>
          </div>{{! stage-item _beep }}
        </div>{{! stage-main }}

        {{#liquid-if stageWrapper.beepsAreExpanded}}
          <div class = 'route-programsProgram-stage-beeps'>

            <div class = 'route-programsProgram-stage-beeps-title'>
              {{t 'routes.programs-program.beeps'}}

              <a
                class = 'route-programsProgram-stage-beeps-add'
                href
                {{action 'addBeep' stageWrapper.stage}}
              >
                {{t 'routes.programs-program.add'}}
              </a>
            </div>

            {{#if stageWrapper.stage.beeps.length}}
              <div class = 'route-programsProgram-stage-beeps-list _header'>
                <div class = 'route-programsProgram-stage-beep'>
                  <div class = 'route-programsProgram-stage-beep-field _index'>
                    #
                  </div>{{! stage-beep-field _index }}

                  <div class = 'route-programsProgram-stage-beep-field _time'>
                    {{t 'routes.programs-program.fields.duration.label'}}
                  </div>{{! stage-beep-field _time }}

                  <div class = 'route-programsProgram-stage-beep-field _count'>
                    {{t 'routes.programs-program.fields.count.label'}}
                  </div>{{! stage-beep-field _count }}

                  <div class = 'route-programsProgram-stage-beep-field _remove'></div>
                </div>{{! stage-beep }}
              </div>{{! stage-beeps-list _header }}


              <div class = 'route-programsProgram-stage-beeps-list _items'>
                {{#each stageWrapper.stage.beeps as |beep i|}}
                  <div class = 'route-programsProgram-stage-beep'>

                    <div class = 'route-programsProgram-stage-beep-field _index'>
                      {{inc i}}
                    </div>{{! stage-beep-field _index }}

                    <div class = 'route-programsProgram-stage-beep-field _time'>
                      {{input
                        class = 'route-programsProgram-stage-beep-field-input'
                        type  = 'number'
                        value = beep.timeMins
                      }}
                    </div>{{! stage-beep-field _time }}

                    <div class = 'route-programsProgram-stage-beep-field _count'>
                      {{input
                        class = 'route-programsProgram-stage-beep-field-input'
                        type  = 'number'
                        value = beep.count
                      }}
                    </div>{{! stage-beep-field _count }}

                    <div class = 'route-programsProgram-stage-beep-field _remove'>
                      <a
                        class = 'route-programsProgram-stage-beep-field-input'
                        href
                        {{action 'removeBeep' stageWrapper.stage beep}}
                      >
                        {{t 'routes.programs-program.remove'}}
                      </a>
                    </div>{{! stage-beep-field _remove }}

                  </div>{{! stage-beep }}
                {{/each}}{{! stage.beeps }}
              </div>{{! stage-beeps-list _items}}
            {{/if}}
          </div>{{! stage-beeps }}
        {{/liquid-if}}{{! stageObject.beepsAreExpanded }}
      {{/drag-sort-list}}{{! currentProgram.stages }}

      <button
        class = "route-programsProgram-button _add"
        {{action 'addStage'}}
      >
          {{t 'routes.programs-program.add-stage'}}
      </button>

    </div>{{! group _stages }}



    <div class = 'route-programsProgram-group _fields'>

      <h2>
        {{t 'routes.programs-program.settings'}}
      </h2>

      {{#with
        (array
          (hash name='name'                type='text')
          (hash name='maxTempBeforeTimer'  type='number')
          (hash name='maxTempBeforeBaking' type='number')
          (hash name='maxTempAfterBaking'  type='number')
          (hash name='maxTempDurationMins' type='number')
        )
        as |fields|
      }}
        {{#each fields as |field|}}
          {{settings-field-input
            class     = 'route-programsProgram-fields-field'
            fieldName = field.name
            label     = (t (concat 'routes.programs-program.fields.' field.name '.label'))

            type      = field.type
            value     = (get currentProgram field.name)

            requestIsPending  = currentProgram.isSaving
            requestIsRejected = currentProgram.isError
          }}
        {{/each}}
      {{/with}}

    </div>{{! group _fields }}

    <button
      class = 'route-programsProgram-button _save'
      {{action 'save'}}
      disabled = {{or (not currentProgram.hasDirtyAttributes) currentProgram.isSaving}}
    >
      {{if currentProgram.iSaving
         (t 'routes.programs-program.saving')
         (t 'routes.programs-program.save')
       }}
    </button>

    <button
      class = 'route-programsProgram-button _reset'
      {{action 'reset'}}
      disabled = {{or (not currentProgram.hasDirtyAttributes) currentProgram.isSaving}}
    >
      {{t 'routes.programs-program.reset'}}
    </button>

  </div>{{! route-programsProgram }}

{{/liquid-bind}}